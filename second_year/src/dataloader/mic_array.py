import numpy as np

class simulator_common():
    def __init__ (self,):    
        circle=self.circle_mic_pos()
        ellipsoid=self.ellip_mic_pos()
        linear=self.linear_mic_pos()
        self.mic_pos_dict={'circle':circle, 'ellipsoid':ellipsoid, 'linear':linear}
     

    def circle_mic_pos(self):
        pos_4=np.array([[3.231, 0, 0.0],
                        [0, 3.231, 0.0],
                        [-3.231, 0, 0.0],
                        [0, -3.231, 0.0]])

        pos_6=np.array([[4.57, 0, 0.0],
                        [2.285, 3.957736095, 0.0],
                        [-2.285, 3.957736095, 0.0],
                        [-4.57,0, 0.0],
                        [-2.285, -3.957736095, 0.0],
                        [2.285, -3.9577360955, 0.0]])

        pos_8=np.array([[5.970992749, 0, 0.0],
                        [4.222129464, 4.222129464, 0.0],
                        [0, 5.970992749, 0.0],
                        [-4.222129464, 4.222129464, 0.0],
                        [-5.970992749, 0, 0.0],
                        [-4.222129464, -4.222129464, 0.0],
                        [0,-5.970992749, 0.0],
                        [4.222129464, -4.222129464, 0.0]])
        return {4:pos_4, 6:pos_6, 8:pos_8}

    def ellip_mic_pos(self):
        pos_4=np.array([[2.4210, 0, 0.0],
                        [0, 3.1841, 0.0],
                        [-2.4210, 0, 0.0],
                        [0, -3.1841, 0.0]])

        pos_6=np.array([[4.6149, 0, 0.0],
                [2, 3.0269, 0.0],
                [-2, 3.2069, 0.0],
                [-4.6149, 0, 0.0],
                [-2, -3.2069, 0.0],
                [2, -3.0269, 0.0]])

       

        pos_8=np.array([[5.9229, 0],
                [3.8509, 3.4216],
                [0, 4.5033],
                [-3.8509, 3.4216],
                [-5.9229, 0],
                [-3.8509, -3.4216],
                [0, -4.5033],
                [3.8509, -3.4216]])





        return {4:pos_4, 6:pos_6, 8:pos_8}
    
    def linear_mic_pos(self):

        pos_4=np.array([[0, 6],
                        [0, 2],
                        [0, -2],
                        [0, -6]])
        pos_4=np.flip(pos_4, -1)
        
        pos_6=np.array([[0,10],
                        [0, 6],
                        [0, 2],
                        [0, -2],
                        [0, -6],
                        [0,-10]])
        pos_6=np.flip(pos_6, -1)

        pos_8=np.array([[0, 14],
                        [0,10],
                        [0, 6],
                        [0, 2],
                        [0, -2],
                        [0, -6],
                        [0,-10],
                        [0, -14]])
        pos_8=np.flip(pos_8, -1)
        return {4:pos_4, 6:pos_6, 8:pos_8}